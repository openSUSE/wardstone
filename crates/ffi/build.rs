extern crate cbindgen;

use std::env;
use std::path::Path;

fn main() {
  let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
  let target_dir = Path::new("../../target");
  let header = target_dir.join("wardstone.h");
  cbindgen::Builder::new()
    .rename_item("Context", "ws_context")
    .rename_item("Ecc", "ws_ecc")
    .rename_item("Ffc", "ws_ffc")
    .rename_item("Hash", "ws_hash")
    .rename_item("Ifc", "ws_ifc")
    .rename_item("Security", "ws_security")
    .rename_item("Symmetric", "ws_symmetric")
    .with_cpp_compat(true)
    .with_crate(crate_dir)
    .with_parse_deps(true)
    .with_parse_include(&["wardstone_core"])
    .with_header("/* Code generated by cbindgen. DO NOT EDIT. */")
    .with_include_guard("WARDSTONE_H_")
    .with_language(cbindgen::Language::C)
    .with_no_includes()
    .with_sys_include("stdint.h")
    .generate()
    .expect("Unable to generate bindings")
    .write_to_file(header);
}
